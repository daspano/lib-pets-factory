{"version":3,"file":"pets-factory.js","sources":["ng://pets-factory/lib/pets-factory.service.ts","ng://pets-factory/lib/pets-factory.component.ts","ng://pets-factory/lib/pets-factory.module.ts","ng://pets-factory/public-api.ts","ng://pets-factory/pets-factory.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { IPet } from './models/pet.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PetsFactoryService {\n\n  private apiUrl: string;\n\n  constructor() {\n    this.apiUrl = 'https://petstore.swagger.io/v2/';\n  }\n\n  addPet(pet: IPet): Promise<IPet>{\n    return new Promise ((resolve, reject) => {\n      fetch(this.apiUrl + 'pet', {\n        method: 'POST',\n        body: JSON.stringify(pet),\n        headers: {\n          'Content-Type' : 'application/json'\n        }\n      })\n      .then((response) => {\n        resolve(pet);\n      })\n      .catch((error) => {\n        reject('error');\n      });\n    });\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { PetsFactoryService } from './pets-factory.service';\nimport { IPet } from './models/pet.model';\n\n@Component({\n  selector: 'lib-pets-factory',\n  template: ``\n})\nexport class PetsFactoryComponent implements OnInit {\n\n  @Input() name: string;\n  @Input() status: string;\n  public pet: IPet;\n\n  constructor(\n    private petsFactoryService: PetsFactoryService\n  ) {\n    this.pet = {\n      id: null,\n      name: '',\n      status: ''\n    };\n  }\n  ngOnInit(): void {\n    this.addNewPet();\n  }\n\n  addNewPet(){\n    this.pet.id = new Date().getTime();\n    this.pet.name = this.name;\n    this.pet.status = this.status;\n    this.petsFactoryService.addPet(this.pet)\n      .then((ok) => alert('New Pet Added Successfully!!'))\n      .catch((ko) => alert('Error Adding New Pet!!'));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PetsFactoryComponent } from './pets-factory.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [PetsFactoryComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [PetsFactoryComponent]\n})\nexport class PetsFactoryModule { }\n","/*\n * Public API Surface of pets-factory\n */\n\nexport * from './lib/pets-factory.service';\nexport * from './lib/pets-factory.component';\nexport * from './lib/pets-factory.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;IAMa,kBAAkB,GAA/B,MAAa,kBAAkB;IAI7B;QACE,IAAI,CAAC,MAAM,GAAG,iCAAiC,CAAC;KACjD;IAED,MAAM,CAAC,GAAS;QACd,OAAO,IAAI,OAAO,CAAE,CAAC,OAAO,EAAE,MAAM;YAClC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,EAAE;gBACzB,MAAM,EAAE,MAAM;gBACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;gBACzB,OAAO,EAAE;oBACP,cAAc,EAAG,kBAAkB;iBACpC;aACF,CAAC;iBACD,IAAI,CAAC,CAAC,QAAQ;gBACb,OAAO,CAAC,GAAG,CAAC,CAAC;aACd,CAAC;iBACD,KAAK,CAAC,CAAC,KAAK;gBACX,MAAM,CAAC,OAAO,CAAC,CAAC;aACjB,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;EACF;;AAzBY,kBAAkB;IAH9B,UAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,kBAAkB,CAyB9B;;ICvBY,oBAAoB,GAAjC,MAAa,oBAAoB;IAM/B,YACU,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAE9C,IAAI,CAAC,GAAG,GAAG;YACT,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,EAAE;YACR,MAAM,EAAE,EAAE;SACX,CAAC;KACH;IACD,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;IAED,SAAS;QACP,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QACnC,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;aACrC,IAAI,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,8BAA8B,CAAC,CAAC;aACnD,KAAK,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,wBAAwB,CAAC,CAAC,CAAC;KACnD;EACF;;YApB+B,kBAAkB;;AALvC;IAAR,KAAK,EAAE;kDAAc;AACb;IAAR,KAAK,EAAE;oDAAgB;AAHb,oBAAoB;IAJhC,SAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,QAAQ,EAAE,EAAE;KACb,CAAC;GACW,oBAAoB,CA2BhC;;ICxBY,iBAAiB,GAA9B,MAAa,iBAAiB;EAAI;AAArB,iBAAiB;IAP7B,QAAQ,CAAC;QACR,YAAY,EAAE,CAAC,oBAAoB,CAAC;QACpC,OAAO,EAAE;YACP,YAAY;SACb;QACD,OAAO,EAAE,CAAC,oBAAoB,CAAC;KAChC,CAAC;GACW,iBAAiB,CAAI;;ACXlC;;;;ACAA;;;;;;"}